void main_fp
(
	in float4 iPosition:		POSITION,
	in float2 iTexCoord:		TEXCOORD0,
	in float3 iLightDirection:	TEXCOORD1,
	in float3 iHalfAngle:		TEXCOORD2,
	
	uniform float4 lightDiffuse,
	uniform float4 lightSpecular,
	
	uniform sampler2D diffuseMap:	TEXUNIT0,
	uniform sampler2D normalMap:	TEXUNIT1,
	uniform sampler2D specularMap:	TEXUNIT2,
	
	out float4 oColor:		COLOR
)
{
	//Diffuse
	float4 diffuseColor = tex2D(diffuseMap, iTexCoord);
	oColor = diffuseColor;
		
	//Bump
	float4 normalColor = tex2D(normalMap, iTexCoord);
	// retrieve normalised light vector
	float3 lightVec = normalize(iLightDirection);
	// get bump map vector, again expand from range-compressed
	float3 bumpVec = normalColor.xyz * 2 - 1;
	oColor *= saturate(dot(bumpVec, lightVec));
		
	//Specular
	float4 specularColor = tex2D(specularMap, iTexCoord);
	// retrieve half angle and normalise
	float3 halfAngle = normalize(iHalfAngle);
	// Pre-raise the specular exponent to the eight power
	float specFactor = pow(saturate(dot(bumpVec, halfAngle)), 4);
	oColor += specularColor * specFactor;
}